# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger: 'none'

pool:
  name: 'ubuntu-latest'
  # demands: 
  #   - MSBuild
  #   - Agent.Name -equals 'winsvr2019'
  #   - Agent.Version -equals 2.213.2

variables:
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  solution: '**/simple-aspnet-projects.sln'
  project: '**/simple-aspnet-web-service-project.csproj'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    #msbuildPath: 'C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\MSBuild.exe'
    #msbuildPath: 'C:\Windows\Microsoft.NET\Framework\v4.0.30319\MSBuild.exe'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

# - task: VSTest@2
#   inputs:
#     platform: '$(buildPlatform)'
#     configuration: '$(buildConfiguration)'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)\$(Build.BuildNumber)'
  condition: succeededOrFailed()

# - task: PublishBuildArtifacts@1
#   displayName: 'Publish Artifact'
#   inputs:
#     PathtoPublish: '$(build.artifactstagingdirectory)'
#     publishLocation: FilePath
#     TargetPath: 'C:\Repo\FirstDotnetApp-Repo\$(Build.DefinitionName)\$(Build.BuildNumber)'
#   condition: succeededOrFailed()